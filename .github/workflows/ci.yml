# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 3.1.x
      - name: Install dependencies for sln
        run: dotnet restore ${{ github.workspace }}/TimeTracking.sln
      - name: Build
        run: dotnet build ${{ github.workspace }}/TimeTracking.sln --configuration Release --no-restore
      - name: Unit Test
        run: dotnet test ${{ github.workspace }}/test/Identity.UnitTests/Identity.UnitTests.csproj  -c release --no-restore -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover 
      - name: Create Test Coverage Badge
        uses: simon-k/dotnet-code-coverage-badge@v1.0.0
        id: create_coverage_badge
        with:
         label: Unit Test Coverage
         color: brightgreen
         path: ${{ github.workspace }}/test/Identity.UnitTests/TestResults/coverage.opencover.xml
         gist-filename: code-coverage.json
         gist-id: 1234567890abcdef1234567890abcdef
         gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}       
      - name: Print code coverage
        run: echo "Code coverage percentage ${{steps.create_coverage_badge.outputs.percentage}}%"  
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: src/Identity/TimeTracking.Identity.WebApi/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/simplewhale:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}  
        
