# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies for sln
        run: dotnet restore ${{ github.workspace }}/TimeTracking.sln
      - name: Build
        run: dotnet build ${{ github.workspace }}/TimeTracking.sln --configuration Release --no-restore
  test:
      runs-on: [ubuntu-latest]
      steps:
      - uses: actions/checkout@v2
      - name: Unit Test Identity Project
        run: dotnet test ${{ github.workspace }}/test/Identity.UnitTests/Identity.UnitTests.csproj  -c release --no-restore -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover 
      - name: Unit Test Report Generator Project
        run: dotnet test ${{ github.workspace }}/test/ReportGenerator.UnitTests/ReportGenerator.UnitTests.csproj  -c release --no-restore -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover
      - name: Unit Test Time Tracking Project
        run: dotnet test ${{ github.workspace }}/test/TimeTracking.UnitTests/TimeTracking.UnitTests.csproj  -c release --no-restore -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover       
  
  publish-docker:
       runs-on: [ubuntu-latest]
       needs: [build]
       steps:
       - uses: actions/checkout@v2
       - name: Login to Docker Hub
         uses: docker/login-action@v1
         with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
       - name: Set up Docker Buildx
         id: buildx
         uses: docker/setup-buildx-action@v1
       - name: Build and push identity image
         id: docker_build_identity
         uses: docker/build-push-action@v2
         with:
           context: .
           file: src/Identity/TimeTracking.Identity.WebApi/Dockerfile
           push: true
           tags: ${{ secrets.DOCKER_USER }}/identitytimetracking:latest
       - name: Build and push report image
         id: docker_build_report
         uses: docker/build-push-action@v2
         with:
           context: .
           file: src/ReportGenerator/Dockerfile
           push: true
           tags: ${{ secrets.DOCKER_USER }}/reportgenerator:latest
       - name: Build and push main image
         id: docker_build_main
         uses: docker/build-push-action@v2
         with:
           context: .
           file: src/TimeTracking/Dockerfile
           push: true
           tags: ${{ secrets.DOCKER_USER }}/timetrackingmain:latest
       - name: Image digest
         run: echo ${{ steps.docker_build.outputs.digest }}  
        
