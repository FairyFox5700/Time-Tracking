# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 3.1.x
      - name: Install dependencies for sln
        run: dotnet restore ${{ github.workspace }}/TimeTracking.sln
      - name: Build
        run: dotnet build ${{ github.workspace }}/TimeTracking.sln --configuration Release --no-restore
      - name: Install dependencies for Report Generator
        run: dotnet restore ${{ github.workspace }}/src/ReportGenerator/TimeTracking.ReportGenerator.WebApi/TimeTracking.ReportGenerator.WebApi.csproj
      - name: docker login
        env:
         DOCKER_USER: ${{ secrets.DOCKER_USER }}   
         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
        run: |
         docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: docker build csharp
        run: docker build ${{ github.workspace }}/src/ReportGenerator/Dockerfile
      - name: docker push
        run: docker push ${{ github.workspace }}/src/ReportGenerator/Dockerfile
      - name: Unit Test
        run: dotnet test ${{ github.workspace }}/test/Identity.UnitTests/Identity.UnitTests.csproj -c release --no-restore 
